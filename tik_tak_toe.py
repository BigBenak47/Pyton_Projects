# -*- coding: utf-8 -*-
"""tik_tak_toe.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1TwXUhjE3rPXGUSGmAqCgljDUABacePIJ
"""

# Function to print the Tic-Tac-Toe board with separators
def print_board(board):
    for row in board:
        print(" | ".join(row))
        print("-" * 9)

# Function to check if a player has won the game
def check_win(board, player):
    # Check for a win in rows
    for row in board:
        if all(cell == player for cell in row):
            return True

    # Check for a win in columns
    for col in range(3):
        if all(board[row][col] == player for row in range(3)):
            return True

    # Check for a win in diagonals
    if all(board[i][i] == player for i in range(3)):
        return True

    if all(board[i][2 - i] == player for i in range(3)):
        return True

    return False

# Main function to implement the Tic-Tac-Toe game
def tic_tac_toe():
    # Create an empty 3x3 Tic-Tac-Toe board
    board = [[' ' for _ in range(3)] for _ in range(3)]

    # Players are represented as 'X' and 'O'
    players = ['X', 'O']

    # 'turn' variable keeps track of the current player's turn (0 for 'X', 1 for 'O')
    turn = 0

    # Loop for a maximum of 9 turns (Tic-Tac-Toe board is 3x3, so at most 9 moves)
    for _ in range(9):
        # Display the current state of the board
        print_board(board)
        player = players[turn]
        print(f"Player {player}, it's your turn.")

        # Get the row and column input from the current player
        while True:
            try:
                row = int(input("Enter the row (0-2): "))
                col = int(input("Enter the column (0-2): "))
                # Check if the move is valid and the cell is empty
                if 0 <= row < 3 and 0 <= col < 3 and board[row][col] == ' ':
                    board[row][col] = player
                    break
                else:
                    print("Invalid move. Try again.")
            except ValueError:
                print("Invalid input. Please enter valid numbers.")

        # Check if the current player has won the game
        if check_win(board, player):
            print_board(board)
            print(f"Player {player} wins!")
            return

        # Switch to the other player for the next turn
        turn = 1 - turn

    # If no player has won after 9 turns, it's a draw
    print_board(board)
    print("It's a draw!")

# Entry point to start the Tic-Tac-Toe game
if __name__ == "__main__":
    tic_tac_toe()